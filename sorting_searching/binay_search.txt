1. Binary search is used for the sorted array
2. It is searching mechanism used to find the value
3. If the array is sorted then we can say it is monotically increasing function

1 2 3 4 5 6 
      l   h

ask 3 that hey are you greater than 4?
or are you less than 4?

that I am less than 4 
so we will move in the window greater than 3

why to check mid because in sorted array mid is the center for any value 

at each time I am breaking the array into two parts and then travelling or searching over another part
so what it specifies , it specifies that time complexity for this searchin is O(logn)

n -> n/2 -> n/4 -> .....1
T(n) = T(n/2)
n/2^k = 1
2^k = n
klog2 = logn
k = logn/log2
k = lognbase2 

Let's write the code for binary search
the array is sorted it means array is in increasing order
int low 
int high

one question is sparse search
string_array = {"for", "geeks", "", "", "", "", "ide", "practice", "", "", "", "quiz"}
              ml                                   m                                   ml
"geeks" -> I can go linear O(n)
the best thing I can do by going with binary search

{"","","","",""}

/*
int low = 0;
int high = 10;
int ans =-1;
while(low<=high){
      int mid = (low+high)/2;
      mid = 5
      if(arr[mid]==target){
            ans = mid;  -> 8
            low = mid+1; 
      }
      else if(arr[mid]> target){
            high = mid-1;
      }
      else{
            low = mid+1;
      }
}
return ans;  --> upper bound
*/


Q) (0 1 1 2 3 3 4 5) 6 (6 6) 
                    fo   lo

                     
   0 1 2 3 4 5 6 7 8 9 10

   fo -> 8
   lo -> 10
   ans = lo - fo + 1 -> 10 - 8 +1 => 3
I want to know the count of 6 -> 3

Q) {"a", "aba", "ba"}
   x+y or y+x
   I can compare these two values x+y < y+x
   so I will put that there in sorting

   a  aba          "ba"
   ["a" ,"aba"]
   a+ba or ba+a

   "a", "aba"+"ba" --> ababa
         "ba"+"aba" --> baaba
   "a", "aba" , "ba"
    aababa  -> smallest string that we can get 
 
 this array must be modified in such a way that it can give the smallest string after concatination
 array of string that we have 
 so we need to find the samllest string after concatinating all the strings 
 so how we can do that 